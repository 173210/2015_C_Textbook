{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"s",
				"start"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"unt",
				"uint64_t"
			],
			[
				"li",
				"list_last_p"
			],
			[
				"list",
				"list_t"
			],
			[
				"n",
				"name"
			],
			[
				"num",
				"number"
			],
			[
				"pri",
				"price"
			],
			[
				"my",
				"mygets_s_with_allocate"
			],
			[
				"ma",
				"maker"
			],
			[
				"size",
				"size_t"
			],
			[
				"str",
				"str2"
			],
			[
				"arr",
				"arr_size"
			],
			[
				"in",
				"insert_str"
			],
			[
				"de",
				"den"
			],
			[
				"v",
				"val2"
			],
			[
				"d",
				"den"
			],
			[
				"va",
				"val1"
			],
			[
				"an",
				"angle2"
			],
			[
				"ang",
				"angle_t"
			],
			[
				"int",
				"int8_t"
			],
			[
				"av",
				"average"
			],
			[
				"a",
				"average"
			],
			[
				"for",
				"for_each_row"
			],
			[
				"data",
				"data_i"
			],
			[
				"make",
				"make_str_database"
			],
			[
				"siz",
				"size_t"
			],
			[
				"is",
				"create_is_prime_num_table"
			],
			[
				"da",
				"dailyrate"
			],
			[
				"me",
				"medication_charge"
			],
			[
				"pa",
				"patienttype"
			],
			[
				"type",
				"typename"
			],
			[
				"si",
				"table_of_time_required_size"
			],
			[
				"get",
				"get_integer_num"
			],
			[
				"re",
				"required_time"
			],
			[
				"rnd",
				"rnd_num"
			],
			[
				"o",
				"operator_arr"
			],
			[
				"s_",
				"s_last_i"
			],
			[
				"eval_",
				"eval_str_arr_buf"
			],
			[
				"ski",
				"skip_eval_str_until_find_digit_or_bracket"
			],
			[
				"buf",
				"buf_size"
			],
			[
				"ch",
				"children"
			],
			[
				"szie",
				"size"
			],
			[
				"begi",
				"begin_index"
			],
			[
				"ci",
				"children_num"
			],
			[
				"e",
				"eval_str_arr"
			],
			[
				"sie",
				"size_t"
			],
			[
				"br",
				"bracket_open_count"
			],
			[
				"bra",
				"bracket_close_count"
			],
			[
				"di",
				"division_names"
			],
			[
				"divi",
				"division_name"
			],
			[
				"C",
				"Compare"
			],
			[
				"static",
				"static_assert"
			],
			[
				"c",
				"c_arr1"
			],
			[
				"it",
				"it2"
			],
			[
				"l",
				"long"
			],
			[
				"ta",
				"target_num"
			],
			[
				"ra",
				"range_min"
			],
			[
				"inp",
				"input_buf"
			],
			[
				"Cs",
				"CStdioFile"
			],
			[
				"rea",
				"read_line_from_cfile"
			],
			[
				"te",
				"text_v"
			],
			[
				"CS",
				"CString"
			],
			[
				"nm",
				"numbers"
			],
			[
				"input",
				"input_key"
			],
			[
				"prin",
				"print_mb_num"
			],
			[
				"ti",
				"title=〔attribute〕"
			],
			[
				"hoge",
				"hoge1"
			],
			[
				"h",
				"height"
			],
			[
				"cas",
				"case4_input"
			],
			[
				"case",
				"case1_input〔argument〕"
			],
			[
				"ca",
				"case4_inout"
			],
			[
				"col",
				"color_arr〔variable〕"
			],
			[
				"doc",
				"doc_arr〔variable〕"
			],
			[
				"p",
				"push〔function〕"
			],
			[
				"al",
				"alt	Attr"
			],
			[
				"blo",
				"blockquote	Tag"
			],
			[
				"INT",
				"INT_MIN"
			],
			[
				"back",
				"background-color"
			],
			[
				"backi",
				"background-image"
			],
			[
				"rb",
				"rgba()"
			],
			[
				"po",
				"pos-r	position: relative;"
			],
			[
				"z",
				"z-index"
			],
			[
				"scr",
				"script"
			],
			[
				"cl",
				"click〔function〕"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"proto",
				"prototype"
			],
			[
				"bird",
				"bird_canvas_c〔class〕"
			],
			[
				"bir",
				"bird_canvas〔function〕"
			],
			[
				"tabl",
				"table-cell"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"font",
				"font-size"
			],
			[
				"m",
				"mrdrnd"
			],
			[
				"INT_M",
				"INT_MIN"
			],
			[
				"png",
				"navigator_Firefox38_0_5.png	w:1600 h:900"
			],
			[
				"lay",
				"layer"
			],
			[
				"layer",
				"layer_arg〔variable〕"
			],
			[
				"over",
				"overflow-y: 〔property〕"
			],
			[
				"map",
				"map_1f"
			],
			[
				"hide",
				"hide_all_description〔function〕"
			],
			[
				"t",
				"t_id"
			],
			[
				"la",
				"layers_"
			],
			[
				"dr",
				"drawImage"
			],
			[
				"i",
				"id_"
			],
			[
				"tex",
				"text-align"
			],
			[
				"wi",
				"width"
			],
			[
				"css",
				"exhibition.css"
			],
			[
				"js",
				"pseudo_color_transition_jCanvas.js"
			],
			[
				"sc",
				"src"
			],
			[
				"bai",
				"background-image: 〔property〕"
			],
			[
				"st",
				"style	Tag"
			],
			[
				"margi",
				"margin-left"
			],
			[
				"pag",
				"pagetitle"
			],
			[
				"IN",
				"INPUT_STR_LIMITS"
			],
			[
				"be",
				"begin"
			],
			[
				"sho",
				"shouhin"
			],
			[
				"con",
				"convert_from_input"
			],
			[
				"ki",
				"kingaku"
			],
			[
				"inpu",
				"inputed_num"
			],
			[
				"swap",
				"swap_char_ptr"
			],
			[
				"ty",
				"typeof"
			],
			[
				"bloc",
				"blockquote"
			],
			[
				"tab",
				"table-cell"
			],
			[
				"mar",
				"margin"
			],
			[
				"pad",
				"padding"
			],
			[
				"display",
				"display: 〔property〕"
			],
			[
				"wid",
				"width: 〔property〕"
			],
			[
				"2015",
				"2015年"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"utf-8\" />\n    <title>第19章 ～文字列操作～</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/sanitize.css/2.0.0/sanitize.min.css\">\n    <link rel=\"stylesheet\" href=\"./css/style.css\">\n    <script src=\"./syntaxhighlighter/scripts/shCore.js\" type=\"text/javascript\"></script>\n    <script src=\"./syntaxhighlighter/scripts/shBrushPlain.js\" type=\"text/javascript\"></script>\n    <script src=\"./syntaxhighlighter/scripts/shBrushCpp_kai.js\" type=\"text/javascript\"></script>\n    <link href=\"./syntaxhighlighter/styles/shCore.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"./syntaxhighlighter/styles/shThemeMidnight_likeVS.css\" rel=\"stylesheet\" type=\"text/css\">\n    <script src=\"./scripts/common.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\">\n        SyntaxHighlighter.all();\n    </script>\n</head>\n<body>\n    <h1>第19章 ～文字列操作～</h1>\n    <nav class=\"top\">\n        <ul>\n            <li><a href=\"./18c_char_str_base.html\" title=\"前頁\">prev</a></li>\n            <li><a href=\"index.html\" title=\"目次\">main</a></li>\n            <li><a href=\"./\" title=\"次頁\">next</a></li>\n        </ul>\n    </nav>\n    <section>\n        <h2>初めに</h2>\n        <p>\n            C言語最難関の文字列操作です。ひたすら気を使わないといけないことが多い、<b>心折設計</b>となっております。<br>\n            ここでは、Cでの文字列操作の難しさを苦しみつつ体感していただきつつ、C++のSTL、std::stringの便利さを痛感していただければ、と思います。\n        </p>\n    </section>\n    <section>\n        <h2>strlen</h2>\n        <p>文字列の長さを求める関数です。といってもマルチバイト文字は考慮しないのでNULL文字を除くbyte数を求めることになります。プロトタイプ宣言を見てみましょう。</p>\n        <pre class=\"brush: cpp;\" title=\"プロトタイプ宣言\">size_t strlen(const char *str);</pre>\n        <p>使用例を見ましょう。</p>\n        <pre class=\"brush: cpp;\" title=\"main.cpp\">#include &lt;iostream>\n#include &lt;cstring>\nvoid strlen_and_do(const char* str, auto (*getstrlen)(const char*) -> size_t, const char* message){\n    std::cout &lt;&lt; message &lt;&lt; \"を呼び出します\" &lt;&lt; std::endl;\n    const auto re = getstrlen(str);\n    if (0 == re){\n        std::cout &lt;&lt; \"エラーなんだぜ\" &lt;&lt; std::endl;\n    }\n    else{\n        std::cout &lt;&lt; re &lt;&lt; \"文字だよ\" &lt;&lt; std::endl;\n    }\n}\nint main(void){\n    auto str = \"arikitari_na_world!\";\n\n    std::cout &lt;&lt; \"base_str : \" &lt;&lt; str &lt;&lt; std::endl;\n\n    strlen_and_do(str, strlen, \"string.hのstrlen関数\");\n    return 0;\n}</pre>\n        <p>では、このstrlen関数を自作してみましょう。まあnull文字が出るまでfor回すだけだから楽勝だよね？</p>\n        <pre class=\"brush: cpp;\" title=\"strlen.h\">#if (defined(_MSC_VER) &amp;&amp; _MSC_VER > 1000) || (defined(__clang__) &amp;&amp; (__clang_major__ > 3 || (__clang_major__ == 3 &amp;&amp; __clang_minor__ > 2))) ||(defined(__ICC) &amp;&amp; __ICC > 1000) ||defined (__GNUC__) &amp;&amp; !defined(__ICC) &amp;&amp; !defined(__clang__) &amp;&amp; (__GNUC__ >= 4 || (__GNUC__ == 3 &amp;&amp; __GNUC_MINOR__ >= 4))\n#pragma once\n#endif\n#ifndef _INC_MY_STRLEN_H\n#define _INC_MY_STRLEN_H\n#include &lt;cstddef>\nsize_t my_strlen(const char *str);\n#endif\n</pre>\n        <p>これをstrlen.hとかしてさっきのmain関数のあるcppと自作する関数の定義を書くcppでincludeしてください。つまりmainのあるcppは</p>\n        <pre class=\"brush: cpp;\" title=\"main.cpp\">#include &lt;iostream>\n#include &lt;cstring>\n#include \"strlen.h\"</pre>\n        <p>中略</p>\n        <pre class=\"brush: cpp; first-line: 14\">int main(void){\n    auto str = \"arikitari_na_world!\";\n\n    std::cout &lt;&lt; \"base_str : \" &lt;&lt; str &lt;&lt; std::endl;\n\n    strlen_and_do(str, strlen, \"string.hのstrlen関数\");\n    strlen_and_do(str, my_strlen, \"strlen.hのmy_strlen関数\");\n    return 0;\n}</pre>\n        <p>な感じ</p>\n        <form><input type=\"button\" value=\"答えを 表示/非表示\" onclick=\"change_answer_state('my_strlen')\"></form>\n        <section id=\"my_strlen\" style=\"display: none;\">\n            <h4>回答</h4>\n            <pre class=\"brush: cpp;\">#include \"strlen.h\"\n#include &lt;limits>\nsize_t my_strlen(const char *str){\n    if (nullptr == str) return 0;\n    const auto search_limits = std::numeric_limits&lt;size_t>::max();//無限ループ防止\n    size_t len;\n    for (len = 0; search_limits > len &amp;&amp; '\\0' != str[len]; len++);\n    return (search_limits == len) ? 0 : len;\n}\n</pre>\n        </section>\n    </section>\n    <section>\n        <h2>strcmp</h2>\n        <p>\n            文字列を比較する関数です。第1引数の文字列のと第2引数の文字列を1文字づつ比較していきます。<br>\n            文字が一致しなくなるかnull文字に遭遇するとループを終了し値をかえします。<br>\n            そのときその文字コードが第一引数のほうが大きかったら正の値を、小さかったら負の値を、両方同じなら0を返します。<br>\n            正の値とは具体的に何かというと実装依存ですが、MSVCもgccもclangも1を返すようです。負の値は同様に-1のようです。\n        </p>\n        <pre class=\"brush: cpp;\" title=\"プロトタイプ宣言\">int strcmp ( const char * str1, const char * str2 );</pre>\n    </section>\n    <section>\n        <h2>strstr</h2>\n        <p>文字列を検索する関数です。見つかるとその先頭のポインターを返し、見つからない場合はNULLポインターを返します。プロトタイプ宣言を見てみましょう。</p>\n        <pre class=\"brush: cpp;\" title=\"プロトタイプ宣言\">char *strstr(const char *str, const char *strSearch); // C only\nchar *strstr(char *str, const char *strSearch); // C++ only\nconst char *strstr(const char *str, const char *strSearch); // C++ only</pre>\n        <p>\n            CとC++で違うのはCとC++のconstの扱いのせいでしょうね。前に話したと思いますが。使用例を見ましょう。<br>\n            _CONST_RETURNってのは上のプロトタイプ宣言で「C only」とか「C++ only」とか書いてありましたが、それです。<br>\n            my_strstrってのはこれから作ってもらう関数名なので作る時実験したい場合は3, 31行目のコメントアウトを外してみてください。\n        </p>\n        <pre class=\"brush: cpp;\" title=\"main.cpp\">#include &lt;iostream>\n#include &lt;cstring>\n//#include \"strstr.h\"\n#ifndef _CONST_RETURN//for msys2 mingw64 clang 3.5.1.\n#ifdef __cplusplus\n#define _CONST_RETURN  const\n#define _CRT_CONST_CORRECT_OVERLOADS\n#else  /* __cplusplus */\n#define _CONST_RETURN\n#endif  /* __cplusplus */\n#endif  /* _CONST_RETURN */\nusing strstr_t = _CONST_RETURN char*(*)(const char*, const char*);\nvoid strstr_and_do(const char* str, const char* search_key, strstr_t strsearch, const char* message){\n    std::cout &lt;&lt; message &lt;&lt; \"を呼び出します\" &lt;&lt; std::endl;\n    auto re = strsearch(str, search_key);\n    if (nullptr == re){\n        std::cout &lt;&lt; \"見つからなかったんだぜ\" &lt;&lt; std::endl;\n    }\n    else{\n        std::cout &lt;&lt; (re - str) + 1 &lt;&lt; \"番目で見つかったよ\" &lt;&lt; std::endl;\n    }\n}\nint main(void){\n    auto str = \"arikitari_na_world!\";\n    auto search_key = \"world\";\n\n    std::cout &lt;&lt; \"base_str : \" &lt;&lt; str &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"search_key : \" &lt;&lt; search_key &lt;&lt; std::endl;\n\n    strstr_and_do(str, search_key, strstr, \"string.hのstrstr関数\");\n    //strstr_and_do(str, search_key, my_strstr, \"strstr.hのmy_strstr関数\");\n    return 0;\n}</pre>\n        <p>さて、この関数を作ってみましょう。forの2重ループを組むのが一番早いと思います。</p>\n        <blockquote cite=\"http://www.cplusplus.com/reference/cstring/strstr/\">\n            <a href=\"http://www.cplusplus.com/reference/cstring/strstr/\">strstr - C++ Reference</a><br>\n            A pointer to the first occurrence in str1 of the entire sequence of characters specified in str2, or a null pointer if the sequence is not present in str1.\n        </blockquote>\n        <blockquote cite=\"https://msdn.microsoft.com/ja-jp/library/z9da80kz.aspx\">\n            <a href=\"https://msdn.microsoft.com/ja-jp/library/z9da80kz.aspx\">strstr、wcsstr、_mbsstr、_mbsstr_l | MSDN</a><br>\n             Returns a pointer to the first occurrence of strSearch in str, or NULL if strSearch does not appear in str. If strSearch points to a string of zero length, the function returns str.\n        </blockquote>\n        <p>第2引数が空の文字列(=0番目の要素が'\\0')のときは第1引数をそのまま帰す必要がある点に注意してください。また使用例の4-11行目、_CONST_RETURNについての部分も書かないとダメです。</p>\n        <form><input type=\"button\" value=\"答えを 表示/非表示\" onclick=\"change_answer_state('my_strstr')\"></form>\n        <section id=\"my_strstr\" style=\"display: none;\">\n            <h4>回答</h4>\n            <pre class=\"brush: cpp; highlight:[18, 23, 27];\" title=\"strstr.cpp\">#include \"strstr.h\"\n#include &lt;limits>\n#ifndef _CONST_RETURN//for msys2 mingw64 clang 3.5.1.\n#ifdef __cplusplus\n#define _CONST_RETURN  const\n#define _CRT_CONST_CORRECT_OVERLOADS\n#else  /* __cplusplus */\n#define _CONST_RETURN\n#endif  /* __cplusplus */\n#endif  /* _CONST_RETURN */\n_CONST_RETURN char *my_strstr(const char *str, const char *strSearch){\n    if (nullptr == str || nullptr == strSearch) return nullptr;\n    if ('\\0' == strSearch[0]) return str;\n    size_t i, j, k;\n    const auto search_lim = std::numeric_limits&lt;size_t>::max();//無限ループ防止\n    for (\n        str_is_not_terminate = true, i = 0, j= 0, k = 0;\n        search_lim != i &amp;&amp; '\\0' != str[k] &amp;&amp; '\\0' != str[i] &amp;&amp; '\\0' != strSearch[j];//正規のbreak条件は'\\0' == strSearch[j]\n        ++i\n    ){\n        for (\n            j = 0, k = i;\n            search_lim - 1 != k &amp;&amp; search_lim != j &amp;&amp; '\\0' != str[k] &amp;&amp; '\\0' != strSearch[j] &amp;&amp; str[k] == strSearch[j];\n            ++j, ++k\n        );\n    }\n    return ('\\0' != strSearch[j]) ? nullptr : &amp;str[i - j - 1];//この時必ずi > jとなる。さもなくばreturnはnullptr\n}</pre>\n            <p>\n                18, 23, 27行目に注目しながら読んでください。strの1文字目とstrSearchの1文字目が一致するかを調べ、しなければstrの2文字目とstrSearchの1文字目と言った具合に線形探索していきます。<br>\n                見つかるより先にstrが'\\0'と24行目で判定されたら、18行目のループも抜けることになります。<br>\n                見つかった場合23行目の段階で条件式「'\\0' != strSearch[j]」はfalseになるので「&amp;str[i - j - 1]」を返します。-1はさっき言ったようにi++されるからです。\n            </p>\n            <p>12, 13行目についてですが、これを逆にしてはいけません。nullポインターの実体って、あなた、それどこですか？</p>\n            <p>俗に力任せ法とか言われる方法ですが、別途配列を持たなければならないBM法やKMP法よりはL1キャッシュを活用しやすいはずなので、ポインタ減算が発生することを差し引いてもstrSearchが十分に短い文字列の場合、十分な早さで検索できます。BM法はひたすらポインタ減算するので論外ですし、KMP法はstrSearch内が同じ文字列の繰り返しのような特殊な場合以外では先にindexを構築する分速度面で不利になります。</p>\n        </section>\n    </section>\n    <nav class=\"bottom\">\n        <ul>\n            <li><a href=\"./18c_char_str_base.html\" title=\"前頁\">prev</a></li>\n            <li><a href=\"index.html\" title=\"目次\">main</a></li>\n            <li><a href=\"./\" title=\"次頁\">next</a></li>\n        </ul>\n    </nav>\n</body>\n</html>",
			"file": "19str_manipulate.html",
			"file_size": 12572,
			"file_write_time": 130808849578061042,
			"settings":
			{
				"buffer_size": 9733,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "15value.html",
			"settings":
			{
				"buffer_size": 12626,
				"line_ending": "Windows"
			}
		},
		{
			"file": "06conditional_state.html",
			"settings":
			{
				"buffer_size": 21327,
				"line_ending": "Windows"
			}
		},
		{
			"file": "09standard_input_output.html",
			"settings":
			{
				"buffer_size": 19515,
				"line_ending": "Windows"
			}
		},
		{
			"file": "syntaxhighlighter/scripts/shBrushCpp_kai.js",
			"settings":
			{
				"buffer_size": 17516,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/insertaion_sort.cpp",
			"settings":
			{
				"buffer_size": 4230,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/yumetodo/Desktop/insertaion_sort.cpp",
			"settings":
			{
				"buffer_size": 9036,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <limits.h>//in gcc\n#include <errno.h>//in gcc\ntypedef unsigned int uint;\nunsigned int get_uinteger_num(const char* message, const uint max, const uint min){\n    //機能：標準入力を数字に変換する。\n    //引数：戻り値の最大値,戻り値の最小値\n    //戻り値：入力した数字、EOFのときはUINT_MAX\n    if(NULL != message && '\\0' != message[0]) puts(message);\n    char s[100];\n\n    if (NULL == fgets(s, 100, stdin)){\n        if (feof(stdin)){//エラーの原因がEOFか切り分け\n            return UINT_MAX;\n        }\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i < 100 && '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        goto get_uinteger_num_error;\n    }\n    if ('\\n' == s[0]) goto get_uinteger_num_error;\n    errno = 0;\n    const unsigned long t = strtoul(s, NULL, 10);\n    if (0 != errno || t < min || max < t)\n        goto get_uinteger_num_error;\n    return (uint)t;\nget_uinteger_num_error:\n    return get_uinteger_num(\"再入力してください\", max, min);\n}\nuint8_t* create_is_not_prime_num_table(const size_t generate_max){\n    uint8_t* p = (uint8_t*)(calloc((size_t)(generate_max) + 1, sizeof(uint8_t)));\n    p[0] = p[1] = 1;\n    for (size_t j = 2; j < generate_max; j++) {\n        for (size_t k = j + j; k <= generate_max; k += j)\n            p[k] = 1;\n    }\n    return p;\n}\nint main(void){\n    const uint create_max = get_uinteger_num(\"生成する最大値を入力してください\", UINT_MAX, 1);\n    uint8_t* is_not_prime_num_table = create_is_not_prime_num_table(create_max);//must free.\n\n    //フィボナッチ数列最初の2項は素数ではない。\n    size_t x, y, i;\n    for (x = 1, y = 1, i = 2; i <= create_max; x = y, y = i, i = x + y){\n        if (!is_prime_num_table[i]){\n            printf(\"%d,\", i);\n        }\n    }\n    free(is_prime_num_table);\n    return 0;\n}",
			"settings":
			{
				"buffer_size": 1789,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "著作権法第二条(定義)第1項9号の5\nイ\n	公衆の用に供されている電気通信回線\n	に\n	接続している\n	自動公衆送信装置（\n		公衆の用に供する電気通信回線\n		に\n		接続することにより、\n		その記録媒体のうち\n			自動公衆送信の用に供する部分（\n				以下\n					この号\n				及び\n					第四十七条の五第一項第一号\n				において「公衆送信用記録媒体」という。\n			）\n			に記録され、\n		又は\n			当該装置に入力される情報\n		を\n		自動公衆送信する機能を有する装置\n		をいう。\n		以下同じ。\n	）\n	の\n	公衆送信用記録媒体\n	に\n	情報\n	を\n	記録し、\n\n		情報が記録された記録媒体\n		を\n		当該自動公衆送信装置\n		の\n		公衆送信用記録媒体\n		として加え、\n	若しくは\n		情報が記録された記録媒体\n		を\n		当該自動公衆送信装置\n		の\n			公衆送信用記録媒体\n			に変換し、\n		又は\n			当該自動公衆送信装置\n			に\n			情報を入力すること。\n\nロ\n		その公衆送信用記録媒体\n		に\n		情報が記録され、\n	又は\n		当該自動公衆送信装置\n		に\n		情報が入力されている自動公衆送信装置について、\n		公衆の用に供されている電気通信回線への接続（\n			配線、自動公衆送信装置の始動、送受信用プログラムの起動その他の一連の行為\n			により行われる場合には、\n			当該一連の行為のうち最後のものをいう。\n		）を行うこと。",
			"settings":
			{
				"buffer_size": 652,
				"line_ending": "Windows",
				"name": "著作権法第二条(定義)第1項9号の5"
			}
		},
		{
			"file": "/D/lsw-build2-master/FirstAutomatedBld.vbs",
			"settings":
			{
				"buffer_size": 10566,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/lsw-build2-master/bld_ffmpeg.sh",
			"settings":
			{
				"buffer_size": 715,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "@echo off\nsetlocal\nrem set wgetstr=aaa\nrem echo %wgetstr%\nset wgetstr=--trust-server-names -t 10 -O msys2.tar.xz \"http://downloads.sourceforge.net/project/msys2/%1?r=http://sourceforge.net/projects/msys2/files/%1/download&ts=1438367151&use_mirror=jaist\"\necho %wgetstr%\npause\necho on\nwget %wgetstr%\n@echo off\npause\nendlocal",
			"file": "/D/lsw-build2-master/msys2_dl_wget.bat",
			"file_size": 333,
			"file_write_time": 130828697374481941,
			"settings":
			{
				"buffer_size": 322,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "/C/Users/yumetodo/Desktop/zxing.md",
			"settings":
			{
				"buffer_size": 4508,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/yumetodo/Desktop/link_bio.txt",
			"settings":
			{
				"buffer_size": 617,
				"line_ending": "Windows",
				"name": "http://first.lifesciencedb.jp/archives/7831"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pains",
				"Package Control: Install Package"
			],
			[
				"data",
				"DataConverter: to text table"
			],
			[
				"findke",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"pain",
				"Package Control: Install Package"
			],
			[
				"datah",
				"DataConverter: to HTML table"
			],
			[
				"datach",
				"DataConverter: to HTML table"
			],
			[
				"datac",
				"DataConverter: to Perl"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"packins",
				"Package Control: Install Package"
			],
			[
				"keyco",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"pacins",
				"Package Control: Install Package"
			],
			[
				"Pacage",
				"Package Control: Install Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"emm",
				"Set Syntax: Emmet"
			],
			[
				"mak",
				"Set Syntax: Markdown Extended"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"mark",
				"Set Syntax: Markdown Extended"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ma",
				"Set Syntax: Markdown Extended"
			],
			[
				"syna",
				"Set Syntax: Markdown"
			],
			[
				"pakage Control:remo",
				"Package Control: Remove Package"
			],
			[
				"",
				"BracketHighlighter: Jump to Right Bracket"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"markdown",
				"Set Syntax: Markdown Light"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 175.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/yumetodo/Documents/2015_C_Textbook",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/scripts",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/mtrand32",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/mtrand32/mtrand32",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/Multidimensional_array",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strcmp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/syntaxhighlighter",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/syntaxhighlighter/scripts"
	],
	"file_history":
	[
		"/C/lib/zxing/cpp/README.md",
		"/C/lib/zxing/qt/README.txt",
		"/C/lib/zxing/NOTICE",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/18c_char_str_base.html",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/bh_wrapping.sublime-settings",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/BracketHighlighter/bh_wrapping.sublime-settings",
		"/C/Users/yumetodo/Desktop/divisions_sales.cpp",
		"/C/Users/yumetodo/Desktop/eval.cpp",
		"/C/Users/yumetodo/Desktop/insertaion_sort.cpp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strpbrk.c",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strcmp/GNUmakefile",
		"/C/Users/yumetodo/Desktop/ideone_nDXQZO.c",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/mtrand32/mtrand32/rdrand64.asm",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/2015_C_Textbook.sublime-workspace",
		"/C/Users/yumetodo/Desktop/SampleProject/src/sample/Main.java",
		"/C/Users/yumetodo/Desktop/ideone_qXNhlI.cpp",
		"/C/Users/yumetodo/Desktop/addressbook-complete/FriendTreeView.cpp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/index.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/13structure.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/08preprocess_and_constant.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/15value.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/14pointer.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/11c_array.html",
		"/C/Users/yumetodo/Google ドライブ/share_神御田_yumetodo/神御田→yumetodo/DxLib Project4/Win32DxLibProject1/main.cpp",
		"/C/Users/yumetodo/Google ドライブ/share_神御田_yumetodo/yumetodo→神御田/ConsoleApplication2/ConsoleApplication2/main.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2013/Projects/dxlib/DxLib Project2/DxLib Project2/Source.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2013/Projects/dxlib/DxLib Project3/DxLib Project3/Source.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2013/Projects/dxlib/Test3/Test3/Source.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2013/Projects/dxlib/Test3/Test3.sln",
		"/C/Users/yumetodo/Documents/Visual Studio 2013/Projects/dxlib/Test4/Test4/Source.cpp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/css/style.css",
		"/C/Users/yumetodo/Desktop/calender.cpp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/02variable.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/03calc.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/05function.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/09standard_input_output.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/number_guessing_game/number_guessing_game/Source.cpp",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/stdin/stdin/Source.c",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/syntaxhighlighter/scripts/shBrushCpp_kai.js",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/mtrand32/GNUmakefile",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/stdin/GNUmakefile",
		"/C/Users/yumetodo/Documents/test.html",
		"/C/Users/yumetodo/Documents/normalize_adress.gs.js",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/Emmet.sublime-settings",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/msys64/mingw64/x86_64-w64-mingw32/include/windows.h",
		"/C/msys64/mingw32/x86_64-w64-mingw32/include/stdlib.h",
		"/C/msys64/mingw32/i686-w64-mingw32/include/stdlib.h",
		"/C/msys64/mingw32/i686-w64-mingw32/include/sec_api/stdlib_s.h",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strlen/strlen/main.cpp",
		"/C/Users/yumetodo/Desktop/tet.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/scripts/common.js",
		"/C/msys64/mingw64/x86_64-w64-mingw32/include/uchar.h",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strlen/strlen/strlen.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2015/Projects/getcudir_unix/getcudir_unix/mytchar.h",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/strlen/GNUmakefile",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/07roop_and_split_Sourcecode.html",
		"/C/Users/yumetodo/Documents/git/biboro_angularjs/js/controllers.js",
		"/C/msys64/mingw32/include/c++/4.9.2/parallel/numeric",
		"/C/msys64/mingw64/include/c++/4.9.2/numeric",
		"/C/msys64/mingw64/include/c++/4.9.2/parallel/numeric",
		"/C/Users/yumetodo/Documents/Visual Studio 2015/Projects/make_array/GNUmakefile",
		"/C/Users/yumetodo/Documents/Visual Studio 2015/Projects/make_array/make_array/GNUmakefile",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/00the_first_step.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/04bit.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/17rand-num.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/16Range-base_for.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/12m.d.c_array.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/10introduction_of_pointer.html",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/06conditional_state.html",
		"/C/Users/yumetodo/Documents/git/liwe_review/style.css",
		"/C/Users/yumetodo/Documents/git/liwe_review/with_jCanvas.js",
		"/C/Users/yumetodo/Documents/git/liwe_review/with_jCanvas.html",
		"/C/Users/yumetodo/Documents/git/liwe_review/README.md",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/2015_C_Textbook.sublime-project",
		"/C/Users/yumetodo/Desktop/link.txt",
		"/C/Users/yumetodo/Documents/git/liwe_review/yumetodo_edit_file.sublime-project",
		"/C/Users/yumetodo/Desktop/jQuerySample/006_jquery_jcanvas_layer2.html",
		"/C/Users/yumetodo/Desktop/jQuerySample/007_jquery_jcanvas_event.html",
		"/C/Users/yumetodo/Desktop/jQuerySample/002_jquery_jcanvas.html",
		"/C/Users/yumetodo/Documents/git/liwe_review/test.html",
		"/C/msys64/mingw32/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/random",
		"/C/msys64/mingw32/lib/gcc/x86_64-w64-mingw32/4.9.2/include/x86intrin.h",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/prime_number_generator/GNUmakefile",
		"/C/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/immintrin.h",
		"/C/msys64/mingw32/lib/gcc/x86_64-w64-mingw32/4.9.2/include/immintrin.h",
		"/C/Users/yumetodo/Desktop/GNUmakefile",
		"/C/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/cpuid.h",
		"/C/msys64/mingw64/lib/clang/3.6.1/include/immintrin.h",
		"/C/msys64/home/yumetodo/.bashrc",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/src/Multidimensional_array/GNUmakefile",
		"/C/Users/yumetodo/Documents/2015_C_Textbook/syntaxhighlighter/scripts/shBrushJScript.js",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/resource/exhibition.css",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/coord.txt",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/exhibition_test.html",
		"/C/Users/yumetodo/Desktop/appVersion.html",
		"/C/Users/yumetodo/Desktop/xml.txt",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/Base File.sublime-settings",
		"/D/lsw-build2-ProtocolFallback/msys64/home/yumetodo/.bashrc",
		"/D/lsw-build2-ProtocolFallback/msys64/home/yumetodo/inst_base.sh",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/science_show.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/exhibition.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/wars_and_nisokon.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/about_june.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/latest.txt",
		"/C/Users/yumetodo/OneDrive/ドキュメント/東京理科大/未来研究室実行委員会/201506/science_show_old.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/common/css/event_project.css",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/Alignment/Base File.sublime-settings",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/Alignment/Default (Windows).sublime-keymap",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/resource/science_show.css",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/DataConverter.sublime-settings",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/DataConverter/DataConverter.sublime-settings",
		"/C/Users/yumetodo/Desktop/list.csv",
		"/C/Users/yumetodo/AppData/Roaming/Sublime Text 3/Packages/User/LineEndings.sublime-settings",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/pinhole_camera.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/access.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_june/index.html",
		"/C/Users/yumetodo/Desktop/science_show_old.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_march/exhibition - コピー.html",
		"/C/Users/yumetodo/Google ドライブ/未来研究室実行委員会/HP仮UP/miraiken2015/event/2015/event_march/exhibition.html",
		"/C/Users/yumetodo/Desktop/C_description.html",
		"/C/Users/yumetodo/Desktop/matora01_2.c",
		"/C/Users/yumetodo/Desktop/matora01.c",
		"/C/Users/yumetodo/Documents/Visual Studio 2015/Projects/ConsoleApplication3/ConsoleApplication3/Source.cpp",
		"/C/Users/yumetodo/Documents/Visual Studio 2015/Projects/ConsoleApplication3/GNUmakefile",
		"/C/msys64/etc/pacman.conf"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"%ld",
			"re",
			"list*",
			"new_list_elem_",
			"new_p",
			"re",
			"printf",
			"error",
			"return INT_MIN",
			"struct list",
			"WGET",
			"CMD_WGET",
			"insert_place",
			"str ",
			"str",
			"SYMBOL",
			"insert_place",
			"str",
			"re",
			"fraction",
			"struct fraction",
			"put_data",
			"j",
			"error",
			"return UINT_MAX",
			"INT_MIN",
			"count",
			"file_count_to",
			"error_count",
			"ext_name",
			"FD_get",
			"FALSE",
			"TRUE",
			"FD_get",
			"moji",
			"exit(1)",
			"backup_check",
			"dr",
			"bw",
			"cout",
			"	public :",
			"	private :",
			"BOOST_STATIC_ASSERT\\(\\(([^\\(\\)]+)\\)\\)",
			" template",
			"generate_max",
			"table_of_time_required.size()",
			"SYMBOL",
			"auto",
			"input<uint32_t>",
			"EOF",
			"EOFのときはEOF",
			"INT_MIN",
			"　",
			"re",
			"、",
			"alocated_children_num",
			"eval_str_arr_num",
			"s_last",
			"s_front",
			"new_char_ptr",
			"s_end",
			"s_begin",
			"s",
			"ibuf_size",
			"tmp",
			"j",
			"tmp",
			"buf",
			"tag_eval_store",
			"decltype(arr)::value_type",
			"secon",
			"T_",
			"void",
			"enum { value = 0 };",
			"i",
			"SN - 2",
			"+ =",
			"  -  ",
			"data1",
			"j",
			"i",
			"j",
			"i",
			"F1",
			"  =  ",
			"! =",
			" *[^\\)\\,=]+\\{",
			" +\\{",
			",  ",
			"<",
			"=",
			"-",
			",",
			"n",
			"bits",
			"k",
			"<br />",
			"x",
			"N",
			"n",
			"N",
			"n",
			"last",
			"count2",
			"ary_x",
			"ary_y",
			"w",
			"printf(\"\\n\");",
			"\"<!",
			"∼",
			"  1個",
			",  ",
			",　",
			"name",
			"DWORD",
			"BaseClass",
			"baseClass",
			"theClass",
			"id",
			"[^ ]' \\+",
			"[^ ]' \\+\\n",
			"_ptr",
			"unique_ptr",
			"<T>",
			"&&",
			"<T>",
			"<rand_type>",
			"template <"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"str_arr ",
			"static_assert($1)",
			"template",
			"\", \"",
			"static constexpr bool value = false;",
			" = ",
			"!=",
			" {",
			", ",
			" < ",
			" = ",
			" - ",
			", ",
			"\\n",
			"putchar('\\n');",
			"-",
			"",
			"\\n",
			"&lt;T>",
			"&amp;&amp;",
			"&lt;T>",
			"&lt;rand_type>",
			"template &lt;",
			"&amp;&amp;",
			" ",
			"\" +",
			" ",
			"\"$1\",",
			"\\r",
			"&lt;uint>",
			"#include &lt;",
			"template&lt;",
			"&lt;T_>",
			"ev_state_c&amp;",
			"&amp;&amp;",
			"&lt;&lt;",
			" &lt; ",
			"&lt;&lt;",
			"&amp;&amp;",
			"&amp;",
			"ev_state_c&amp;",
			"_",
			"&amp;&amp;",
			"&lt;&lt;",
			"#include &lt;",
			"template&lt;",
			"_cast&lt;",
			"_cast<&lt;",
			"template<&lt;",
			" &lt; ",
			" &amp; ",
			"&lt;&lt;",
			"&amp;&amp;",
			"&lt;&lt;",
			"&amp;&amp;",
			"&lt;&lt;",
			" &amp; ",
			"&lt;&lt;",
			") &amp; ",
			"&amp;&amp;",
			" &lt; ",
			"&lt;&lt;",
			" &lt; ",
			"&lt;&lt;",
			"std::exception&amp; ",
			" &lt; ",
			"std::exception&amp; ",
			"std::exception&amp;",
			"&lt;&lt;",
			"&amp;&amp;",
			"",
			"<td style=\"text-align: center;\">",
			"<th>",
			"&lt;&lt;",
			"&amp;$1",
			"&amp;",
			"&lt;",
			"http://yumetodo.github.io/2015_C_Textbook/",
			"layer_arg",
			":$1",
			"所要時間-cell",
			"2部",
			"1部",
			"2部",
			"1部",
			"CONSTANT",
			"&lt;",
			"&amp;",
			"&lt;",
			"h3>",
			"h2>",
			"h1>",
			"&lt;",
			"base",
			"",
			"<br />",
			"<a class=\"strong\">$1</a>",
			" class=\"strong\"",
			"&gt;",
			"&lt;",
			"&lt;std::_Wrap_alloc&lt;std::allocator&lt;std::_Vbase&gt;&gt;&gt;",
			"(uint64_t)"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 12,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "19str_manipulate.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9733,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										4694,
										4697
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								5413,
								5413
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"in_converting": true,
							"is_xml": false,
							"origin_encoding": "UTF-8-SIG",
							"revert_to_scratch": true,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 143.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "15value.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12626,
						"regions":
						{
						},
						"selection":
						[
							[
								2812,
								2812
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 71.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "06conditional_state.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21327,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										8015,
										8018
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 26.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "09standard_input_output.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19515,
						"regions":
						{
						},
						"selection":
						[
							[
								5260,
								5260
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1607.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "syntaxhighlighter/scripts/shBrushCpp_kai.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17516,
						"regions":
						{
						},
						"selection":
						[
							[
								14239,
								14239
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"origin_encoding": "UTF-8",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2341.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/insertaion_sort.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4230,
						"regions":
						{
						},
						"selection":
						[
							[
								2374,
								2374
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/yumetodo/Desktop/insertaion_sort.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9036,
						"regions":
						{
						},
						"selection":
						[
							[
								2927,
								2927
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1148.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1789,
						"regions":
						{
						},
						"selection":
						[
							[
								1348,
								1348
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "C:\\Users\\yumetodo\\Documents\\2015_C_Textbook",
							"is_xml": false,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 652,
						"regions":
						{
						},
						"selection":
						[
							[
								62,
								259
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "著作権法第二条(定義)第1項9号の5",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "C:\\Users\\yumetodo\\Documents\\2015_C_Textbook",
							"is_xml": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/D/lsw-build2-master/FirstAutomatedBld.vbs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10566,
						"regions":
						{
						},
						"selection":
						[
							[
								2857,
								2857
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/VBScript/VBScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1158.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/lsw-build2-master/bld_ffmpeg.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 715,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/D/lsw-build2-master/msys2_dl_wget.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 322,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								307
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"force_encoding": "Shift_JIS",
							"in_converting": true,
							"is_xml": false,
							"origin_encoding": "Shift_JIS",
							"syntax": "Packages/Batch File/Batch File.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 247.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/Users/yumetodo/Desktop/zxing.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4508,
						"regions":
						{
						},
						"selection":
						[
							[
								3351,
								3351
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"is_xml": false,
							"syntax": "Packages/Markdown Extended/Syntaxes/Markdown Extended.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1113.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/Users/yumetodo/Desktop/link_bio.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 617,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "http://first.lifesciencedb.jp/archives/7831",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"is_xml": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "2015_C_Textbook.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 197.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
